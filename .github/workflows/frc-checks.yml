# This is a basic workflow to help you get started with Actions

name: FRC CI Checks

# Controls when the action will run.
on:
  workflow_call:

env:
  PAGES_DIR: "./build/docs/javadoc"
  PAGES_ARTIFACT_NAME: javadocs

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # v2 minimum required
      - name: Run check style
        uses: dbelyaev/action-checkstyle@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: 'github-check'
          fail_on_error: true
          filter_mode: nofilter
          level: error
          checkstyle_config: checks.xml
  spell_check:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # v2 minimum required
      - name: Run Spell Check
        uses: codespell-project/actions-codespell@master
        with:
          check_filenames: true
  merge_conflict_job:
    runs-on: ubuntu-latest
    name: Find merge conflicts
    steps:
      # Checkout the source code so there are some files to look at.
      - uses: actions/checkout@v4
      # Run the actual merge conflict finder
      - name: Merge Conflict finder
        uses: olivernybroe/action-conflict-finder@v4.0
  build-javadoc:
    name: Build Javadocs
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # This grabs the WPILib docker container
    container: wpilib/roborio-cross-ubuntu:2025-24.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    # Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    # Runs a single command using the runners shell
    - name: Create Javadocs
      run: ./gradlew javadoc
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PAGES_ARTIFACT_NAME }}
        path: ${{ env.PAGES_DIR }}
  deploy-javadoc:
    if: success() && github.ref_name == github.event.repository.default_branch
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: true
    name: Deploy Javadocs
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build-javadoc
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.PAGES_ARTIFACT_NAME }}
        path: ${{ env.PAGES_DIR }}
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ${{ env.PAGES_DIR }}
    - name: Deploy to Github Pages
      id: deployment
      uses: actions/deploy-pages@v4
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # This grabs the WPILib docker container
    container: wpilib/roborio-cross-ubuntu:2025-24.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    # Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    # Runs a single command using the runners shell
    - name: Compile and run tests on robot code
      run: ./gradlew build
